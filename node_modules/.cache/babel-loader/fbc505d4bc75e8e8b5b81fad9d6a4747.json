{"ast":null,"code":"var _jsxFileName = \"/home/zach/projects/eventwager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // const BigNumber = require('bignumber.js');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x3862F68dffed36f78fdDDB043680565ed6ACeEf2\";\nconst tokenAddress = \"0x98bD449b806928733E3a0780d67D1a1c8A0c28Bb\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  _s();\n\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSide1, setRetrievedSide1] = useState(\"1\");\n  const [retrievedSide2, setRetrievedSide2] = useState(\"1\");\n  const [requestAddress, setRequestAddress] = useState(0);\n  const [requestAmount, setRequestAmount] = useState(0); // Setter hooks\n\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0); // Getter methods\n\n  const getWager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call(); // var amnt = post / 10**18; // Convert from Wei\n\n    const _wager = web3.utils.fromWei(post);\n\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async t => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getPot().call();\n\n    const _pot = web3.utils.fromWei(post);\n\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const renderCurrentPot = async () => {\n    const post = await eventWagerContract.methods.getPot().call();\n\n    const _pot = web3.utils.fromWei(post);\n\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getCurrentSides = async t => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call(); // const post = await eventWagerContract.methods.getPot().call();\n\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]); // return false;\n  };\n\n  const renderSides = async () => {\n    // Same as getCurrentSides, except it takes no context argument\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n  };\n\n  const getUserSide = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  }; // Setter methods\n\n\n  const wager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    const _wager = web3.utils.toWei(newWager);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({\n      from: account,\n      gas\n    });\n    getWager(t);\n    getCurrentPot(t);\n    var form = document.getElementById(\"submitWagerForm\");\n    form.reset();\n  };\n\n  const endRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.endRound(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.endRound(winningSide).send({\n      from: account,\n      gas\n    });\n    var form = document.getElementById(\"endRoundForm\");\n    form.reset();\n  };\n\n  const beginRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).estimateGas();\n    const post = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).send({\n      from: account,\n      gas\n    });\n    var form = document.getElementById(\"beginRoundForm\");\n    form.reset();\n  };\n\n  const closeBetting = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.closeBetting().estimateGas();\n    const post = await eventWagerContract.methods.closeBetting().send({\n      from: account,\n      gas\n    });\n  };\n\n  const allowSpend = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; // (2**256)-1)\n    // let amnt = new BigNumber(999 * (10**18));\n    // let _amnt = await amnt.toString();\n    // console.log(_amnt);\n\n    const gas = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).send({\n      from: account\n    });\n  };\n\n  const requestTokens = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).estimateGas();\n    const post = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).send({\n      from: account\n    });\n    var form = document.getElementById(\"requestTokensForm\");\n    form.reset();\n  };\n\n  renderSides();\n  renderCurrentPot();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper\",\n        children: [\"1: \", retrievedSide1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 30\n        }, this), \" 2: \", retrievedSide2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          id: \"submitWagerForm\",\n          onSubmit: wager,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Enter your wager and side:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"# of WC\",\n              onChange: t => setWager(t.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"side\",\n              placeholder: \"1 or 2\",\n              onChange: t => setUserSide(t.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            type: \"submit\",\n            value: \"Submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: getWager,\n            type: \"button\",\n            children: \"Your current wager:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), retrievedWager]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: getCurrentPot,\n            type: \"button\",\n            children: \"Click for current pot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), currentPot]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: allowSpend,\n            type: \"button\",\n            children: \"Click to approve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lower\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            id: \"beginRoundForm\",\n            onSubmit: beginRound,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"Side 1\",\n                onChange: t => setRetrievedSide1(t.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                name: \"side\",\n                placeholder: \"Side 2\",\n                onChange: t => setRetrievedSide2(t.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                type: \"submit\",\n                value: \"Submit\",\n                children: \"Begin Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            id: \"endRoundForm\",\n            onSubmit: endRound,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                name: \"side\",\n                placeholder: \"Winning Side\",\n                onChange: t => setWinningSide(t.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                type: \"submit\",\n                value: \"Submit\",\n                children: \"End Round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            id: \"requestTokensForm\",\n            onSubmit: requestTokens,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                name: \"name\",\n                placeholder: \"0x address\",\n                onChange: t => setRequestAddress(t.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input\",\n                type: \"text\",\n                name: \"side\",\n                placeholder: \"Amount\",\n                onChange: t => setRequestAmount(t.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                type: \"submit\",\n                value: \"Submit\",\n                children: \"Request Tokens\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lower\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: getCurrentSides,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                type: \"submit\",\n                value: \"Submit\",\n                children: \"Get Sides\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form\",\n            onSubmit: closeBetting,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button\",\n                type: \"submit\",\n                value: \"Submit\",\n                children: \"Close Betting\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5wRJGvCfprLHzXwY6Dc6062/xRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zach/projects/eventwager/src/App.js"],"names":["React","useState","eventWager","token","Web3","BrowserRouter","Router","Route","Switch","web3","givenProvider","contractAddress","tokenAddress","eventWagerContract","eth","Contract","tokenContract","App","retrievedWager","setRetrievedWager","currentPot","setRetrievedCurrentPot","retrievedUserSide","setRetrievedUserSide","retrievedSide1","setRetrievedSide1","retrievedSide2","setRetrievedSide2","requestAddress","setRequestAddress","requestAmount","setRequestAmount","newWager","setWager","userSide","setUserSide","winningSide","setWinningSide","getWager","t","preventDefault","accounts","window","ethereum","enable","account","post","methods","call","_wager","utils","fromWei","getCurrentPot","getPot","_pot","renderCurrentPot","getCurrentSides","getSides","substrings","split","renderSides","getUserSide","wager","toWei","gas","estimateGas","send","from","form","document","getElementById","reset","endRound","beginRound","closeBetting","allowSpend","approve","requestTokens","target","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// const BigNumber = require('bignumber.js');\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x3862F68dffed36f78fdDDB043680565ed6ACeEf2\";\nconst tokenAddress = \"0x98bD449b806928733E3a0780d67D1a1c8A0c28Bb\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSide1, setRetrievedSide1] = useState(\"1\");\n  const [retrievedSide2, setRetrievedSide2] = useState(\"1\");\n  const [requestAddress, setRequestAddress] = useState(0);\n  const [requestAmount, setRequestAmount] = useState(0);\n\n  // Setter hooks\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0);\n\n  // Getter methods\n  const getWager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n    // var amnt = post / 10**18; // Convert from Wei\n    const _wager = web3.utils.fromWei(post);\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async (t) => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getPot().call();\n    const _pot = web3.utils.fromWei(post);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const renderCurrentPot = async () => {\n    const post = await eventWagerContract.methods.getPot().call();\n    const _pot = web3.utils.fromWei(post);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getCurrentSides = async (t) => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call();\n    // const post = await eventWagerContract.methods.getPot().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n    // return false;\n  };\n\n  const renderSides = async () => { // Same as getCurrentSides, except it takes no context argument\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n  };\n\n  const getUserSide = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  };\n\n\n  // Setter methods\n  const wager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const _wager = web3.utils.toWei(newWager);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({ from: account, gas });\n    getWager(t);\n    getCurrentPot(t);\n    var form = document.getElementById(\"submitWagerForm\");\n    form.reset();\n  };\n\n  const endRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.endRound(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.endRound(winningSide).send({ from: account, gas });\n    var form = document.getElementById(\"endRoundForm\");\n    form.reset();\n  };\n\n  const beginRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).estimateGas();\n    const post = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).send({ from: account, gas });\n    var form = document.getElementById(\"beginRoundForm\");\n    form.reset();\n  };\n\n  const closeBetting = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.closeBetting().estimateGas();\n    const post = await eventWagerContract.methods.closeBetting().send({from: account, gas });\n    \n  };\n\n  const allowSpend = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    // (2**256)-1)\n    // let amnt = new BigNumber(999 * (10**18));\n    // let _amnt = await amnt.toString();\n    // console.log(_amnt);\n    const gas = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).send({ from: account });\n  };\n\n  const requestTokens = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).estimateGas();\n    const post = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).send({ from: account });\n    var form = document.getElementById(\"requestTokensForm\");\n    form.reset();\n  };\n  \n  \n\n  renderSides();\n  renderCurrentPot();\n\n  return (\n    <Router>\n      <div className=\"main\">\n        <div className=\"upper\">\n          1: {retrievedSide1}<br/> 2: {retrievedSide2}\n        </div>\n        <div className=\"card\">\n          <form className=\"form\" id=\"submitWagerForm\" onSubmit={wager}>\n            <label>\n              Enter your wager and side:\n              <br />\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"# of WC\"\n                onChange={(t) => setWager(t.target.value)}\n              />\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"side\"\n                placeholder=\"1 or 2\"\n                onChange={(t) => setUserSide(t.target.value)}\n              />\n            </label>\n            <button className=\"button\" type=\"submit\" value=\"Submit\">\n              Submit\n            </button>\n          </form>\n          <br />\n          <div>\n            <button className=\"button\" onClick={getWager} type=\"button\">\n              Your current wager: \n            </button>\n              {retrievedWager}\n          </div>\n          <br /> <br />\n          <div>\n            <button className=\"button\" onClick={getCurrentPot} type=\"button\">\n              Click for current pot\n            </button>\n            {currentPot}\n          </div>\n          <br /><br />\n          <div>\n            <button className=\"button\" onClick={allowSpend} type=\"button\">\n                Click to approve\n            </button>\n          </div>\n          <div className=\"lower\">\n            <form className=\"form\" id=\"beginRoundForm\" onSubmit={beginRound}>\n              <label>\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Side 1\"\n                  onChange={(t) => setRetrievedSide1(t.target.value)}\n                />\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"side\"\n                  placeholder=\"Side 2\"\n                  onChange={(t) => setRetrievedSide2(t.target.value)}\n                />\n                <button className=\"button\" type=\"submit\" value=\"Submit\">\n                  Begin Round\n                </button>\n              </label>\n            </form>\n            <form className=\"form\" id=\"endRoundForm\" onSubmit={endRound}>\n            <label>\n              <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"side\"\n                  placeholder=\"Winning Side\"\n                  onChange={(t) => setWinningSide(t.target.value)}\n                />\n                <button className=\"button\" type=\"submit\" value=\"Submit\">\n                  End Round\n                </button>\n              </label>\n            </form>\n            <form className=\"form\" id=\"requestTokensForm\" onSubmit={requestTokens}>\n              <label>\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"0x address\"\n                  onChange={(t) => setRequestAddress(t.target.value)}\n                />\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"side\"\n                  placeholder=\"Amount\"\n                  onChange={(t) => setRequestAmount(t.target.value)}\n                />\n                <button className=\"button\" type=\"submit\" value=\"Submit\">\n                  Request Tokens\n                </button>\n              </label>\n            </form>\n        </div>\n        <div className=\"lower\">\n          <form className=\"form\" onSubmit={getCurrentSides}>\n            <label>\n                <button className=\"button\" type=\"submit\" value=\"Submit\">\n                  Get Sides\n                </button>\n              </label>\n            </form>\n            <form className=\"form\" onSubmit={closeBetting}>\n              <label>\n                <button className=\"button\" type=\"submit\" value=\"Submit\">\n                  Close Betting\n                </button>\n              </label>\n            </form>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}