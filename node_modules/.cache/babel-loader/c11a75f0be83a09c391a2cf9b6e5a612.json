{"ast":null,"code":"var _jsxFileName = \"/home/zach/projects/eventwager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x45EA58a8F5293Ea42AdC1F8804E1a273b178f0e7\";\nconst tokenAddress = \"0x98D9d638ef7BE414b654deeB1d77c615cCB2bDbb\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  _s();\n\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSides, setRetrievedSides] = useState([\"1\", \"2\"]); // Setter hooks\n\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0); // Getter methods\n\n  const getWager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call(); // var amnt = post / 10**18; // Convert from Wei\n\n    const _wager = web3.utils.fromWei(post);\n\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async t => {\n    t.preventDefault(); // const accounts = await window.ethereum.enable();\n    // const account = accounts[0];\n\n    const post = await eventWagerContract.methods.getPot().call();\n\n    const _pot = web3.utils.fromWei(post); // getSides(t);\n\n\n    allowSpend(t);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getSides = async t => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSides(substrings);\n  };\n\n  const getUserSide = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  }; // Setter methods\n\n\n  const wager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    const _wager = web3.utils.toWei(newWager); // Debug\n    // console.log(account);\n    // console.log(web3.utils.fromWei(_wager));\n    // const bal = await tokenContract.methods.balanceOf(account).call();\n    // console.log(web3.utils.fromWei(bal));\n    // console.log(accounts);\n\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({\n      from: account,\n      gas\n    });\n    getWager(t);\n    getCurrentPot(t);\n  };\n\n  const endRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.wager(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.wager(winningSide).send({\n      from: account,\n      gas\n    });\n  };\n\n  const beginRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound().estimateGas();\n    const post = await eventWagerContract.methods.beginRound().send({\n      from: account,\n      gas\n    });\n  };\n\n  const allowSpend = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = tokenContract.methods.approve(contractAddress, 2 ** 256 - 1).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, 2 ** 256 - 1).send({\n      from: account,\n      gas\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper\",\n      children: [\"1: \", retrievedSides[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 31\n      }, this), \" 2: \", retrievedSides[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: wager,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter your wager and side:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            name: \"name\",\n            onChange: t => setWager(t.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            name: \"side\",\n            onChange: t => setUserSide(t.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          value: \"Submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: getWager,\n          type: \"button\",\n          children: \"Your current wager:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), retrievedWager]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 16\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: getCurrentPot,\n          type: \"button\",\n          children: \"Click for current pot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), currentPot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TIp8dRGGYb5AXlYbIYoSmjJqxjc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zach/projects/eventwager/src/App.js"],"names":["React","useState","eventWager","token","Web3","web3","givenProvider","contractAddress","tokenAddress","eventWagerContract","eth","Contract","tokenContract","App","retrievedWager","setRetrievedWager","currentPot","setRetrievedCurrentPot","retrievedUserSide","setRetrievedUserSide","retrievedSides","setRetrievedSides","newWager","setWager","userSide","setUserSide","winningSide","setWinningSide","getWager","t","preventDefault","accounts","window","ethereum","enable","account","post","methods","call","_wager","utils","fromWei","getCurrentPot","getPot","_pot","allowSpend","getSides","substrings","split","getUserSide","wager","toWei","gas","estimateGas","send","from","endRound","beginRound","approve","target","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x45EA58a8F5293Ea42AdC1F8804E1a273b178f0e7\";\nconst tokenAddress = \"0x98D9d638ef7BE414b654deeB1d77c615cCB2bDbb\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSides, setRetrievedSides] = useState([\"1\",\"2\"]);\n\n  // Setter hooks\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0);\n\n  // Getter methods\n  const getWager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n    // var amnt = post / 10**18; // Convert from Wei\n    const _wager = web3.utils.fromWei(post);\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async (t) => {\n    t.preventDefault();\n    // const accounts = await window.ethereum.enable();\n    // const account = accounts[0];\n    const post = await eventWagerContract.methods.getPot().call();\n    const _pot = web3.utils.fromWei(post);\n    // getSides(t);\n    allowSpend(t);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getSides = async (t) => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSides(substrings);\n  };\n\n  const getUserSide = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  };\n\n\n\n  // Setter methods\n  const wager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const _wager = web3.utils.toWei(newWager);\n      \n      // Debug\n    // console.log(account);\n    // console.log(web3.utils.fromWei(_wager));\n    // const bal = await tokenContract.methods.balanceOf(account).call();\n    // console.log(web3.utils.fromWei(bal));\n    // console.log(accounts);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({ from: account, gas });\n    getWager(t);\n    getCurrentPot(t);\n  };\n\n  const endRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.wager(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.wager(winningSide).send({ from: account, gas });\n  };\n\n  const beginRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound().estimateGas();\n    const post = await eventWagerContract.methods.beginRound().send({ from: account, gas });\n  };\n\n  const allowSpend = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = tokenContract.methods.approve(contractAddress, ((2**256)-1)).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, ((2**256)-1)).send({ from: account, gas });\n  };\n  \n\n  return (\n    <div className=\"main\">\n      <div className=\"upper\">\n        1: {retrievedSides[0]}<br/> 2: {retrievedSides[1]}\n      </div>\n      <div className=\"card\">\n        <form className=\"form\" onSubmit={wager}>\n          <label>\n            Enter your wager and side:\n            <br />\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              onChange={(t) => setWager(t.target.value)}\n            />\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"side\"\n              onChange={(t) => setUserSide(t.target.value)}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" value=\"Submit\">\n            Submit\n          </button>\n        </form>\n        <br />\n        <div>\n          <button className=\"button\" onClick={getWager} type=\"button\">\n            Your current wager: \n          </button>\n            {retrievedWager}\n        </div>\n        <br /> <br /> <br />\n        <div>\n          <button className=\"button\" onClick={getCurrentPot} type=\"button\">\n            Click for current pot\n          </button>\n          {currentPot}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}