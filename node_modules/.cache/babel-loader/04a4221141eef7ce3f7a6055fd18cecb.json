{"ast":null,"code":"var _jsxFileName = \"/home/zach/projects/eventwager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // import Home from './home';\n// const BigNumber = require('bignumber.js');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x3862F68dffed36f78fdDDB043680565ed6ACeEf2\";\nconst tokenAddress = \"0x98bD449b806928733E3a0780d67D1a1c8A0c28Bb\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  _s();\n\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSide1, setRetrievedSide1] = useState(\"1\");\n  const [retrievedSide2, setRetrievedSide2] = useState(\"1\");\n  const [requestAddress, setRequestAddress] = useState(0);\n  const [requestAmount, setRequestAmount] = useState(0); // Setter hooks\n\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0); // Getter methods\n\n  const getUserWager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n\n    const _wager = web3.utils.fromWei(post);\n\n    setRetrievedWager(_wager);\n  };\n\n  const renderUserWager = async () => {\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n\n    const _wager = web3.utils.fromWei(post);\n\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async t => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getPot().call();\n\n    const _pot = web3.utils.fromWei(post);\n\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const renderCurrentPot = async () => {\n    const post = await eventWagerContract.methods.getPot().call();\n\n    const _pot = web3.utils.fromWei(post);\n\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getCurrentSides = async t => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call(); // const post = await eventWagerContract.methods.getPot().call();\n\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]); // return false;\n  };\n\n  const renderSides = async () => {\n    // Same as getCurrentSides, except it takes no context argument\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n  };\n\n  const getUserSide = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  }; // Setter methods\n\n\n  const wager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    const _wager = web3.utils.toWei(newWager);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({\n      from: account,\n      gas\n    });\n    getUserWager(t);\n    getCurrentPot(t);\n    var form = document.getElementById(\"submitWagerForm\");\n    form.reset();\n  };\n\n  const endRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.endRound(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.endRound(winningSide).send({\n      from: account,\n      gas\n    });\n    var form = document.getElementById(\"endRoundForm\");\n    form.reset();\n  };\n\n  const beginRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).estimateGas();\n    const post = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).send({\n      from: account,\n      gas\n    });\n    var form = document.getElementById(\"beginRoundForm\");\n    form.reset();\n  };\n\n  const closeBetting = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.closeBetting().estimateGas();\n    const post = await eventWagerContract.methods.closeBetting().send({\n      from: account,\n      gas\n    });\n  };\n\n  const allowSpend = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; // (2**256)-1)\n    // let amnt = new BigNumber(999 * (10**18));\n    // let _amnt = await amnt.toString();\n    // console.log(_amnt);\n\n    const gas = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).send({\n      from: account\n    });\n  };\n\n  const requestTokens = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).estimateGas();\n    const post = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).send({\n      from: account\n    });\n    var form = document.getElementById(\"requestTokensForm\");\n    form.reset();\n  };\n\n  renderSides();\n  renderCurrentPot();\n  renderUserWager();\n\n  const Home = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper\",\n        children: [\"1: \", retrievedSide1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 30\n        }, this), \" 2: \", retrievedSide2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5wRJGvCfprLHzXwY6Dc6062/xRU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zach/projects/eventwager/src/App.js"],"names":["React","useState","eventWager","token","Web3","BrowserRouter","Router","Route","Switch","web3","givenProvider","contractAddress","tokenAddress","eventWagerContract","eth","Contract","tokenContract","App","retrievedWager","setRetrievedWager","currentPot","setRetrievedCurrentPot","retrievedUserSide","setRetrievedUserSide","retrievedSide1","setRetrievedSide1","retrievedSide2","setRetrievedSide2","requestAddress","setRequestAddress","requestAmount","setRequestAmount","newWager","setWager","userSide","setUserSide","winningSide","setWinningSide","getUserWager","t","preventDefault","accounts","window","ethereum","enable","account","post","methods","getWager","call","_wager","utils","fromWei","renderUserWager","getCurrentPot","getPot","_pot","renderCurrentPot","getCurrentSides","getSides","substrings","split","renderSides","getUserSide","wager","toWei","gas","estimateGas","send","from","form","document","getElementById","reset","endRound","beginRound","closeBetting","allowSpend","approve","requestTokens","Home"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import Home from './home';\n\n// const BigNumber = require('bignumber.js');\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x3862F68dffed36f78fdDDB043680565ed6ACeEf2\";\nconst tokenAddress = \"0x98bD449b806928733E3a0780d67D1a1c8A0c28Bb\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSide1, setRetrievedSide1] = useState(\"1\");\n  const [retrievedSide2, setRetrievedSide2] = useState(\"1\");\n  const [requestAddress, setRequestAddress] = useState(0);\n  const [requestAmount, setRequestAmount] = useState(0);\n\n  // Setter hooks\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0);\n\n  // Getter methods\n  const getUserWager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n    const _wager = web3.utils.fromWei(post);\n    setRetrievedWager(_wager);\n  };\n\n  const renderUserWager = async () => {\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n    const _wager = web3.utils.fromWei(post);\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async (t) => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getPot().call();\n    const _pot = web3.utils.fromWei(post);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const renderCurrentPot = async () => {\n    const post = await eventWagerContract.methods.getPot().call();\n    const _pot = web3.utils.fromWei(post);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getCurrentSides = async (t) => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call();\n    // const post = await eventWagerContract.methods.getPot().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n    // return false;\n  };\n\n  const renderSides = async () => { // Same as getCurrentSides, except it takes no context argument\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n  };\n\n  const getUserSide = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  };\n\n\n  // Setter methods\n  const wager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const _wager = web3.utils.toWei(newWager);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({ from: account, gas });\n    getUserWager(t);\n    getCurrentPot(t);\n    var form = document.getElementById(\"submitWagerForm\");\n    form.reset();\n  };\n\n  const endRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.endRound(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.endRound(winningSide).send({ from: account, gas });\n    var form = document.getElementById(\"endRoundForm\");\n    form.reset();\n  };\n\n  const beginRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).estimateGas();\n    const post = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).send({ from: account, gas });\n    var form = document.getElementById(\"beginRoundForm\");\n    form.reset();\n  };\n\n  const closeBetting = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.closeBetting().estimateGas();\n    const post = await eventWagerContract.methods.closeBetting().send({from: account, gas });\n    \n  };\n\n  const allowSpend = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    // (2**256)-1)\n    // let amnt = new BigNumber(999 * (10**18));\n    // let _amnt = await amnt.toString();\n    // console.log(_amnt);\n    const gas = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).send({ from: account });\n  };\n\n  const requestTokens = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).estimateGas();\n    const post = eventWagerContract.methods.requestTokens(requestAddress, web3.utils.toWei(requestAmount)).send({ from: account });\n    var form = document.getElementById(\"requestTokensForm\");\n    form.reset();\n  };\n\n  renderSides();\n  renderCurrentPot();\n  renderUserWager();\n\n  const Home = () => {\n    return(\n        <div className=\"main\">\n          <div className=\"upper\">\n          1: {retrievedSide1}<br/> 2: {retrievedSide2}\n          </div>\n        </div>\n    );\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}