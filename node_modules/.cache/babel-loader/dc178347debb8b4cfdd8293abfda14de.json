{"ast":null,"code":"var _jsxFileName = \"/home/zach/projects/eventwager/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\"; // const BigNumber = require('bignumber.js');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x7f7562BfD166706Ec9E9633Aa339B67B3f3Ec23b\";\nconst tokenAddress = \"0xa711E0B700a56A897E18E0f79A14DD2c6b2c5C5d\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  _s();\n\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSide1, setRetrievedSide1] = useState(\"1\");\n  const [retrievedSide2, setRetrievedSide2] = useState(\"1\"); // Setter hooks\n\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0); // Getter methods\n\n  const getWager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call(); // var amnt = post / 10**18; // Convert from Wei\n\n    const _wager = web3.utils.fromWei(post);\n\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async t => {\n    t.preventDefault(); // const accounts = await window.ethereum.enable();\n    // const account = accounts[0];\n\n    const post = await eventWagerContract.methods.getPot().call();\n\n    const _pot = web3.utils.fromWei(post); // getSides(t);\n\n\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getSides = async t => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n  };\n\n  const getUserSide = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  }; // Setter methods\n\n\n  const wager = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n\n    const _wager = web3.utils.toWei(newWager); // Debug\n\n\n    console.log(account);\n    console.log(accounts);\n    console.log('Debug'); // console.log(web3.utils.fromWei(_wager));\n    // const bal = await tokenContract.methods.balanceOf(account).call();\n    // console.log(web3.utils.fromWei(bal));\n    // console.log(accounts);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({\n      from: account,\n      gas\n    });\n    getWager(t);\n    getCurrentPot(t);\n  };\n\n  const endRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.wager(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.wager(winningSide).send({\n      from: account,\n      gas\n    });\n  };\n\n  const beginRound = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound().estimateGas();\n    const post = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).send({\n      from: account,\n      gas\n    });\n  };\n\n  const closeBetting = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.closeBetting().estimateGas();\n    const post = await eventWagerContract.methods.closeBetting().call({\n      from: account,\n      gas\n    });\n  };\n\n  const allowSpend = async t => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0]; // (2**256)-1)\n    // let amnt = new BigNumber(999 * (10**18));\n    // let _amnt = await amnt.toString();\n    // console.log(_amnt);\n\n    const gas = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).send({\n      from: account\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upper\",\n      children: [\"1: \", retrievedSide1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 28\n      }, this), \" 2: \", retrievedSide2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: wager,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Enter your wager and side:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            name: \"name\",\n            onChange: t => setWager(t.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            name: \"side\",\n            onChange: t => setUserSide(t.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          value: \"Submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: getWager,\n          type: \"button\",\n          children: \"Your current wager:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), retrievedWager]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: getCurrentPot,\n          type: \"button\",\n          children: \"Click for current pot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), currentPot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: allowSpend,\n          type: \"button\",\n          children: \"Click to approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lower\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form\",\n          onSubmit: beginRound,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"name\",\n              placeholder: \"Side 1\",\n              onChange: t => setRetrievedSide1(t.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"side\",\n              placeholder: \"Side 2\",\n              onChange: t => setRetrievedSide2(t.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              value: \"Submit\",\n              children: \"Begin Round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"side\",\n              placeholder: \"Winning Side\",\n              onChange: t => setWinningSide(t.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              value: \"Submit\",\n              children: \"End Round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ppfUdAS9tPz4onHjSQPprKNH/jk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/zach/projects/eventwager/src/App.js"],"names":["React","useState","eventWager","token","Web3","web3","givenProvider","contractAddress","tokenAddress","eventWagerContract","eth","Contract","tokenContract","App","retrievedWager","setRetrievedWager","currentPot","setRetrievedCurrentPot","retrievedUserSide","setRetrievedUserSide","retrievedSide1","setRetrievedSide1","retrievedSide2","setRetrievedSide2","newWager","setWager","userSide","setUserSide","winningSide","setWinningSide","getWager","t","preventDefault","accounts","window","ethereum","enable","account","post","methods","call","_wager","utils","fromWei","getCurrentPot","getPot","_pot","getSides","substrings","split","getUserSide","wager","toWei","console","log","gas","estimateGas","send","from","endRound","beginRound","closeBetting","allowSpend","approve","target","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { eventWager } from './abi/abi';\nimport { token } from './abi/abi';\nimport Web3 from \"web3\";\n\n// const BigNumber = require('bignumber.js');\nconst web3 = new Web3(Web3.givenProvider);\nconst contractAddress = \"0x7f7562BfD166706Ec9E9633Aa339B67B3f3Ec23b\";\nconst tokenAddress = \"0xa711E0B700a56A897E18E0f79A14DD2c6b2c5C5d\";\nconst eventWagerContract = new web3.eth.Contract(eventWager, contractAddress);\nconst tokenContract = new web3.eth.Contract(token, tokenAddress);\n\nfunction App() {\n  // Getter hooks\n  const [retrievedWager, setRetrievedWager] = useState(0);\n  const [currentPot, setRetrievedCurrentPot] = useState(0);\n  const [retrievedUserSide, setRetrievedUserSide] = useState(0);\n  const [retrievedSide1, setRetrievedSide1] = useState(\"1\");\n  const [retrievedSide2, setRetrievedSide2] = useState(\"1\");\n\n  // Setter hooks\n  const [newWager, setWager] = useState(0);\n  const [userSide, setUserSide] = useState(0);\n  const [winningSide, setWinningSide] = useState(0);\n\n  // Getter methods\n  const getWager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getWager(account).call();\n    // var amnt = post / 10**18; // Convert from Wei\n    const _wager = web3.utils.fromWei(post);\n    setRetrievedWager(_wager);\n  };\n\n  const getCurrentPot = async (t) => {\n    t.preventDefault();\n    // const accounts = await window.ethereum.enable();\n    // const account = accounts[0];\n    const post = await eventWagerContract.methods.getPot().call();\n    const _pot = web3.utils.fromWei(post);\n    // getSides(t);\n    setRetrievedCurrentPot(_pot);\n  };\n\n  const getSides = async (t) => {\n    t.preventDefault();\n    const post = await eventWagerContract.methods.getSides().call();\n    var substrings = post.split('||&&||');\n    setRetrievedSide1(substrings[0]);\n    setRetrievedSide2(substrings[1]);\n  };\n\n  const getUserSide = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const post = await eventWagerContract.methods.getUserSide(account).call();\n    setRetrievedUserSide(post);\n  };\n\n\n\n  // Setter methods\n  const wager = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const _wager = web3.utils.toWei(newWager);\n      \n      // Debug\n    console.log(account);\n    console.log(accounts);\n    console.log('Debug');\n    // console.log(web3.utils.fromWei(_wager));\n    // const bal = await tokenContract.methods.balanceOf(account).call();\n    // console.log(web3.utils.fromWei(bal));\n    // console.log(accounts);\n\n    const gas = await eventWagerContract.methods.wager(userSide, _wager).estimateGas();\n    const post = await eventWagerContract.methods.wager(userSide, _wager).send({ from: account, gas });\n    getWager(t);\n    getCurrentPot(t);\n  };\n\n  const endRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.wager(winningSide).estimateGas();\n    const post = await eventWagerContract.methods.wager(winningSide).send({ from: account, gas });\n  };\n\n  const beginRound = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.beginRound().estimateGas();\n    const post = await eventWagerContract.methods.beginRound(retrievedSide1, retrievedSide2).send({ from: account, gas });\n  };\n\n  const closeBetting = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    const gas = await eventWagerContract.methods.closeBetting().estimateGas();\n    const post = await eventWagerContract.methods.closeBetting().call({from: account, gas });\n  };\n\n  const allowSpend = async (t) => {\n    t.preventDefault();\n    const accounts = await window.ethereum.enable();\n    const account = accounts[0];\n    // (2**256)-1)\n    // let amnt = new BigNumber(999 * (10**18));\n    // let _amnt = await amnt.toString();\n    // console.log(_amnt);\n    const gas = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).estimateGas();\n    const post = tokenContract.methods.approve(contractAddress, web3.utils.toWei('9999')).send({ from: account });\n  };\n  \n\n  return (\n    <div className=\"main\">\n      <div className=\"upper\">\n        1: {retrievedSide1}<br/> 2: {retrievedSide2}\n      </div>\n      <div className=\"card\">\n        <form className=\"form\" onSubmit={wager}>\n          <label>\n            Enter your wager and side:\n            <br />\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              onChange={(t) => setWager(t.target.value)}\n            />\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"side\"\n              onChange={(t) => setUserSide(t.target.value)}\n            />\n          </label>\n          <button className=\"button\" type=\"submit\" value=\"Submit\">\n            Submit\n          </button>\n        </form>\n        <br />\n        <div>\n          <button className=\"button\" onClick={getWager} type=\"button\">\n            Your current wager: \n          </button>\n            {retrievedWager}\n        </div>\n        <br /> <br />\n        <div>\n          <button className=\"button\" onClick={getCurrentPot} type=\"button\">\n            Click for current pot\n          </button>\n          {currentPot}\n        </div>\n        <br /><br />\n        <div>\n          <button className=\"button\" onClick={allowSpend} type=\"button\">\n              Click to approve\n          </button>\n        </div>\n        <div className=\"lower\">\n          <form className=\"form\" onSubmit={beginRound}>\n            <label>\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Side 1\"\n                onChange={(t) => setRetrievedSide1(t.target.value)}\n              />\n              <input\n                className=\"input\"\n                type=\"text\"\n                name=\"side\"\n                placeholder=\"Side 2\"\n                onChange={(t) => setRetrievedSide2(t.target.value)}\n              />\n              <button className=\"button\" type=\"submit\" value=\"Submit\">\n                Begin Round\n              </button>\n            </label>\n          </form>\n          <form>\n           <label>\n            <input\n                className=\"input\"\n                type=\"text\"\n                name=\"side\"\n                placeholder=\"Winning Side\"\n                onChange={(t) => setWinningSide(t.target.value)}\n              />\n              \n            </label>\n            <label>\n              <button className=\"button\" type=\"submit\" value=\"Submit\">\n                End Round\n              </button>\n            </label>\n          </form>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}